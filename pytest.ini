[pytest]
minversion = 6.0
addopts = -ra -q --strict-markers
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for combined components
    performance: Performance and benchmarking tests
    quality: Image quality assessment tests
    stress: Stress and load tests
    edge_case: Edge case and error handling tests
    gpu_required: Tests that require GPU
    slow: Tests that take a long time to run
    benchmark: Performance benchmark tests

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */examples/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod